/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.UnavailabilityCollection;
import io.swagger.client.model.UnavailabilityPayload;
import io.swagger.client.model.UnavailabilityRecord;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UnavailabilitiesApi
 */
@Ignore
public class UnavailabilitiesApiTest {

    private final UnavailabilitiesApi api = new UnavailabilitiesApi();

    /**
     * Get all unavailabilities
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unavailabilitiesGetTest() throws Exception {
        Integer page = null;
        Integer length = null;
        String sort = null;
        String q = null;
        String fields = null;
        String with = null;
        UnavailabilityCollection response = api.unavailabilitiesGet(page, length, sort, q, fields, with);

        // TODO: test validations
    }
    /**
     * Create an unavailability
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unavailabilitiesPostTest() throws Exception {
        UnavailabilityPayload body = null;
        UnavailabilityRecord response = api.unavailabilitiesPost(body);

        // TODO: test validations
    }
    /**
     * Delete an unavailability
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unavailabilitiesUnavailabilityIdDeleteTest() throws Exception {
        Integer unavailabilityId = null;
        api.unavailabilitiesUnavailabilityIdDelete(unavailabilityId);

        // TODO: test validations
    }
    /**
     * Get an unavailability
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unavailabilitiesUnavailabilityIdGetTest() throws Exception {
        Integer unavailabilityId = null;
        UnavailabilityRecord response = api.unavailabilitiesUnavailabilityIdGet(unavailabilityId);

        // TODO: test validations
    }
    /**
     * Update an unavailability
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unavailabilitiesUnavailabilityIdPutTest() throws Exception {
        UnavailabilityPayload body = null;
        Integer unavailabilityId = null;
        UnavailabilityRecord response = api.unavailabilitiesUnavailabilityIdPut(body, unavailabilityId);

        // TODO: test validations
    }
}
