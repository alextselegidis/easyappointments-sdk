/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ProviderRecordSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-06T17:26:30.696Z[GMT]")
public class ProviderRecordSettings {
  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("notifications")
  private Boolean notifications = null;

  @SerializedName("calendarView")
  private String calendarView = null;

  @SerializedName("googleSync")
  private Boolean googleSync = null;

  @SerializedName("googleCalendar")
  private String googleCalendar = null;

  @SerializedName("googleToken")
  private String googleToken = null;

  @SerializedName("syncFutureDays")
  private String syncFutureDays = null;

  @SerializedName("syncPastDays")
  private String syncPastDays = null;

  @SerializedName("workingPlan")
  private String workingPlan = null;

  public ProviderRecordSettings username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public ProviderRecordSettings password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public ProviderRecordSettings notifications(Boolean notifications) {
    this.notifications = notifications;
    return this;
  }

   /**
   * Get notifications
   * @return notifications
  **/
  @Schema(description = "")
  public Boolean isNotifications() {
    return notifications;
  }

  public void setNotifications(Boolean notifications) {
    this.notifications = notifications;
  }

  public ProviderRecordSettings calendarView(String calendarView) {
    this.calendarView = calendarView;
    return this;
  }

   /**
   * Get calendarView
   * @return calendarView
  **/
  @Schema(description = "")
  public String getCalendarView() {
    return calendarView;
  }

  public void setCalendarView(String calendarView) {
    this.calendarView = calendarView;
  }

  public ProviderRecordSettings googleSync(Boolean googleSync) {
    this.googleSync = googleSync;
    return this;
  }

   /**
   * Get googleSync
   * @return googleSync
  **/
  @Schema(description = "")
  public Boolean isGoogleSync() {
    return googleSync;
  }

  public void setGoogleSync(Boolean googleSync) {
    this.googleSync = googleSync;
  }

  public ProviderRecordSettings googleCalendar(String googleCalendar) {
    this.googleCalendar = googleCalendar;
    return this;
  }

   /**
   * Get googleCalendar
   * @return googleCalendar
  **/
  @Schema(description = "")
  public String getGoogleCalendar() {
    return googleCalendar;
  }

  public void setGoogleCalendar(String googleCalendar) {
    this.googleCalendar = googleCalendar;
  }

  public ProviderRecordSettings googleToken(String googleToken) {
    this.googleToken = googleToken;
    return this;
  }

   /**
   * Get googleToken
   * @return googleToken
  **/
  @Schema(description = "")
  public String getGoogleToken() {
    return googleToken;
  }

  public void setGoogleToken(String googleToken) {
    this.googleToken = googleToken;
  }

  public ProviderRecordSettings syncFutureDays(String syncFutureDays) {
    this.syncFutureDays = syncFutureDays;
    return this;
  }

   /**
   * Get syncFutureDays
   * @return syncFutureDays
  **/
  @Schema(description = "")
  public String getSyncFutureDays() {
    return syncFutureDays;
  }

  public void setSyncFutureDays(String syncFutureDays) {
    this.syncFutureDays = syncFutureDays;
  }

  public ProviderRecordSettings syncPastDays(String syncPastDays) {
    this.syncPastDays = syncPastDays;
    return this;
  }

   /**
   * Get syncPastDays
   * @return syncPastDays
  **/
  @Schema(description = "")
  public String getSyncPastDays() {
    return syncPastDays;
  }

  public void setSyncPastDays(String syncPastDays) {
    this.syncPastDays = syncPastDays;
  }

  public ProviderRecordSettings workingPlan(String workingPlan) {
    this.workingPlan = workingPlan;
    return this;
  }

   /**
   * Get workingPlan
   * @return workingPlan
  **/
  @Schema(description = "")
  public String getWorkingPlan() {
    return workingPlan;
  }

  public void setWorkingPlan(String workingPlan) {
    this.workingPlan = workingPlan;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProviderRecordSettings providerRecordSettings = (ProviderRecordSettings) o;
    return Objects.equals(this.username, providerRecordSettings.username) &&
        Objects.equals(this.password, providerRecordSettings.password) &&
        Objects.equals(this.notifications, providerRecordSettings.notifications) &&
        Objects.equals(this.calendarView, providerRecordSettings.calendarView) &&
        Objects.equals(this.googleSync, providerRecordSettings.googleSync) &&
        Objects.equals(this.googleCalendar, providerRecordSettings.googleCalendar) &&
        Objects.equals(this.googleToken, providerRecordSettings.googleToken) &&
        Objects.equals(this.syncFutureDays, providerRecordSettings.syncFutureDays) &&
        Objects.equals(this.syncPastDays, providerRecordSettings.syncPastDays) &&
        Objects.equals(this.workingPlan, providerRecordSettings.workingPlan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, notifications, calendarView, googleSync, googleCalendar, googleToken, syncFutureDays, syncPastDays, workingPlan);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProviderRecordSettings {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    calendarView: ").append(toIndentedString(calendarView)).append("\n");
    sb.append("    googleSync: ").append(toIndentedString(googleSync)).append("\n");
    sb.append("    googleCalendar: ").append(toIndentedString(googleCalendar)).append("\n");
    sb.append("    googleToken: ").append(toIndentedString(googleToken)).append("\n");
    sb.append("    syncFutureDays: ").append(toIndentedString(syncFutureDays)).append("\n");
    sb.append("    syncPastDays: ").append(toIndentedString(syncPastDays)).append("\n");
    sb.append("    workingPlan: ").append(toIndentedString(workingPlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
