/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ProviderPayloadSettings model module.
 * @module model/ProviderPayloadSettings
 * @version 1.0.0
 */
export class ProviderPayloadSettings {
  /**
   * Constructs a new <code>ProviderPayloadSettings</code>.
   * @alias module:model/ProviderPayloadSettings
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ProviderPayloadSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProviderPayloadSettings} obj Optional instance to populate.
   * @return {module:model/ProviderPayloadSettings} The populated <code>ProviderPayloadSettings</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProviderPayloadSettings();
      if (data.hasOwnProperty('username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
      if (data.hasOwnProperty('notifications'))
        obj.notifications = ApiClient.convertToType(data['notifications'], 'Boolean');
      if (data.hasOwnProperty('calendarView'))
        obj.calendarView = ApiClient.convertToType(data['calendarView'], 'String');
      if (data.hasOwnProperty('googleSync'))
        obj.googleSync = ApiClient.convertToType(data['googleSync'], 'Boolean');
      if (data.hasOwnProperty('googleCalendar'))
        obj.googleCalendar = ApiClient.convertToType(data['googleCalendar'], 'String');
      if (data.hasOwnProperty('googleToken'))
        obj.googleToken = ApiClient.convertToType(data['googleToken'], 'String');
      if (data.hasOwnProperty('syncFutureDays'))
        obj.syncFutureDays = ApiClient.convertToType(data['syncFutureDays'], 'String');
      if (data.hasOwnProperty('syncPastDays'))
        obj.syncPastDays = ApiClient.convertToType(data['syncPastDays'], 'String');
      if (data.hasOwnProperty('workingPlan'))
        obj.workingPlan = ApiClient.convertToType(data['workingPlan'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} username
 */
ProviderPayloadSettings.prototype.username = undefined;

/**
 * @member {String} password
 */
ProviderPayloadSettings.prototype.password = undefined;

/**
 * @member {Boolean} notifications
 */
ProviderPayloadSettings.prototype.notifications = undefined;

/**
 * @member {String} calendarView
 */
ProviderPayloadSettings.prototype.calendarView = undefined;

/**
 * @member {Boolean} googleSync
 */
ProviderPayloadSettings.prototype.googleSync = undefined;

/**
 * @member {String} googleCalendar
 */
ProviderPayloadSettings.prototype.googleCalendar = undefined;

/**
 * @member {String} googleToken
 */
ProviderPayloadSettings.prototype.googleToken = undefined;

/**
 * @member {String} syncFutureDays
 */
ProviderPayloadSettings.prototype.syncFutureDays = undefined;

/**
 * @member {String} syncPastDays
 */
ProviderPayloadSettings.prototype.syncPastDays = undefined;

/**
 * @member {String} workingPlan
 */
ProviderPayloadSettings.prototype.workingPlan = undefined;

