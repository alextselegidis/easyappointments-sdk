/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {AdminCollection} from './model/AdminCollection';
import {AdminPayload} from './model/AdminPayload';
import {AdminRecord} from './model/AdminRecord';
import {AdminRecordSettings} from './model/AdminRecordSettings';
import {AppointmentCollection} from './model/AppointmentCollection';
import {AppointmentPayload} from './model/AppointmentPayload';
import {AppointmentRecord} from './model/AppointmentRecord';
import {Availabilities} from './model/Availabilities';
import {CategoryCollection} from './model/CategoryCollection';
import {CategoryPayload} from './model/CategoryPayload';
import {CategoryRecord} from './model/CategoryRecord';
import {CustomerCollection} from './model/CustomerCollection';
import {CustomerPayload} from './model/CustomerPayload';
import {CustomerRecord} from './model/CustomerRecord';
import {ErrorResponse} from './model/ErrorResponse';
import {ProviderCollection} from './model/ProviderCollection';
import {ProviderPayload} from './model/ProviderPayload';
import {ProviderPayloadSettings} from './model/ProviderPayloadSettings';
import {ProviderRecord} from './model/ProviderRecord';
import {ProviderRecordSettings} from './model/ProviderRecordSettings';
import {SecretaryCollection} from './model/SecretaryCollection';
import {SecretaryPayload} from './model/SecretaryPayload';
import {SecretaryRecord} from './model/SecretaryRecord';
import {ServiceCollection} from './model/ServiceCollection';
import {ServicePayload} from './model/ServicePayload';
import {ServiceRecord} from './model/ServiceRecord';
import {SettingCollection} from './model/SettingCollection';
import {SettingPayload} from './model/SettingPayload';
import {SettingRecord} from './model/SettingRecord';
import {UnavailabilityCollection} from './model/UnavailabilityCollection';
import {UnavailabilityPayload} from './model/UnavailabilityPayload';
import {UnavailabilityRecord} from './model/UnavailabilityRecord';
import {AdminsApi} from './api/AdminsApi';
import {AppointmentsApi} from './api/AppointmentsApi';
import {AvailabilitiesApi} from './api/AvailabilitiesApi';
import {CategoriesApi} from './api/CategoriesApi';
import {CustomersApi} from './api/CustomersApi';
import {ProvidersApi} from './api/ProvidersApi';
import {SecretariesApi} from './api/SecretariesApi';
import {ServicesApi} from './api/ServicesApi';
import {SettingsApi} from './api/SettingsApi';
import {UnavailabilitiesApi} from './api/UnavailabilitiesApi';

/**
* These_are_the_OpenAPI_specs_that_describe_the_REST_API_of_EasyAppointments_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EasyappointmentsApi = require('index'); // See note below*.
* var xxxSvc = new EasyappointmentsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EasyappointmentsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EasyappointmentsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EasyappointmentsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdminCollection model constructor.
     * @property {module:model/AdminCollection}
     */
    AdminCollection,

    /**
     * The AdminPayload model constructor.
     * @property {module:model/AdminPayload}
     */
    AdminPayload,

    /**
     * The AdminRecord model constructor.
     * @property {module:model/AdminRecord}
     */
    AdminRecord,

    /**
     * The AdminRecordSettings model constructor.
     * @property {module:model/AdminRecordSettings}
     */
    AdminRecordSettings,

    /**
     * The AppointmentCollection model constructor.
     * @property {module:model/AppointmentCollection}
     */
    AppointmentCollection,

    /**
     * The AppointmentPayload model constructor.
     * @property {module:model/AppointmentPayload}
     */
    AppointmentPayload,

    /**
     * The AppointmentRecord model constructor.
     * @property {module:model/AppointmentRecord}
     */
    AppointmentRecord,

    /**
     * The Availabilities model constructor.
     * @property {module:model/Availabilities}
     */
    Availabilities,

    /**
     * The CategoryCollection model constructor.
     * @property {module:model/CategoryCollection}
     */
    CategoryCollection,

    /**
     * The CategoryPayload model constructor.
     * @property {module:model/CategoryPayload}
     */
    CategoryPayload,

    /**
     * The CategoryRecord model constructor.
     * @property {module:model/CategoryRecord}
     */
    CategoryRecord,

    /**
     * The CustomerCollection model constructor.
     * @property {module:model/CustomerCollection}
     */
    CustomerCollection,

    /**
     * The CustomerPayload model constructor.
     * @property {module:model/CustomerPayload}
     */
    CustomerPayload,

    /**
     * The CustomerRecord model constructor.
     * @property {module:model/CustomerRecord}
     */
    CustomerRecord,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ProviderCollection model constructor.
     * @property {module:model/ProviderCollection}
     */
    ProviderCollection,

    /**
     * The ProviderPayload model constructor.
     * @property {module:model/ProviderPayload}
     */
    ProviderPayload,

    /**
     * The ProviderPayloadSettings model constructor.
     * @property {module:model/ProviderPayloadSettings}
     */
    ProviderPayloadSettings,

    /**
     * The ProviderRecord model constructor.
     * @property {module:model/ProviderRecord}
     */
    ProviderRecord,

    /**
     * The ProviderRecordSettings model constructor.
     * @property {module:model/ProviderRecordSettings}
     */
    ProviderRecordSettings,

    /**
     * The SecretaryCollection model constructor.
     * @property {module:model/SecretaryCollection}
     */
    SecretaryCollection,

    /**
     * The SecretaryPayload model constructor.
     * @property {module:model/SecretaryPayload}
     */
    SecretaryPayload,

    /**
     * The SecretaryRecord model constructor.
     * @property {module:model/SecretaryRecord}
     */
    SecretaryRecord,

    /**
     * The ServiceCollection model constructor.
     * @property {module:model/ServiceCollection}
     */
    ServiceCollection,

    /**
     * The ServicePayload model constructor.
     * @property {module:model/ServicePayload}
     */
    ServicePayload,

    /**
     * The ServiceRecord model constructor.
     * @property {module:model/ServiceRecord}
     */
    ServiceRecord,

    /**
     * The SettingCollection model constructor.
     * @property {module:model/SettingCollection}
     */
    SettingCollection,

    /**
     * The SettingPayload model constructor.
     * @property {module:model/SettingPayload}
     */
    SettingPayload,

    /**
     * The SettingRecord model constructor.
     * @property {module:model/SettingRecord}
     */
    SettingRecord,

    /**
     * The UnavailabilityCollection model constructor.
     * @property {module:model/UnavailabilityCollection}
     */
    UnavailabilityCollection,

    /**
     * The UnavailabilityPayload model constructor.
     * @property {module:model/UnavailabilityPayload}
     */
    UnavailabilityPayload,

    /**
     * The UnavailabilityRecord model constructor.
     * @property {module:model/UnavailabilityRecord}
     */
    UnavailabilityRecord,

    /**
    * The AdminsApi service constructor.
    * @property {module:api/AdminsApi}
    */
    AdminsApi,

    /**
    * The AppointmentsApi service constructor.
    * @property {module:api/AppointmentsApi}
    */
    AppointmentsApi,

    /**
    * The AvailabilitiesApi service constructor.
    * @property {module:api/AvailabilitiesApi}
    */
    AvailabilitiesApi,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The CustomersApi service constructor.
    * @property {module:api/CustomersApi}
    */
    CustomersApi,

    /**
    * The ProvidersApi service constructor.
    * @property {module:api/ProvidersApi}
    */
    ProvidersApi,

    /**
    * The SecretariesApi service constructor.
    * @property {module:api/SecretariesApi}
    */
    SecretariesApi,

    /**
    * The ServicesApi service constructor.
    * @property {module:api/ServicesApi}
    */
    ServicesApi,

    /**
    * The SettingsApi service constructor.
    * @property {module:api/SettingsApi}
    */
    SettingsApi,

    /**
    * The UnavailabilitiesApi service constructor.
    * @property {module:api/UnavailabilitiesApi}
    */
    UnavailabilitiesApi
};
