/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EasyappointmentsApi);
  }
}(this, function(expect, EasyappointmentsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EasyappointmentsApi.AdminsApi();
  });

  describe('(package)', function() {
    describe('AdminsApi', function() {
      describe('adminsAdminIdDelete', function() {
        it('should call adminsAdminIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for adminsAdminIdDelete call
          /*

          instance.adminsAdminIdDelete(adminId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('adminsAdminIdGet', function() {
        it('should call adminsAdminIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for adminsAdminIdGet call and complete the assertions
          /*

          instance.adminsAdminIdGet(adminId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.AdminRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('adminsAdminIdPut', function() {
        it('should call adminsAdminIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for adminsAdminIdPut call and complete the assertions
          /*

          instance.adminsAdminIdPut(body, adminId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.AdminRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('adminsGet', function() {
        it('should call adminsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for adminsGet call and complete the assertions
          /*
          var opts = {};

          instance.adminsGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.AdminCollection);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('adminsPost', function() {
        it('should call adminsPost successfully', function(done) {
          // TODO: uncomment, update parameter values for adminsPost call and complete the assertions
          /*

          instance.adminsPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.AdminRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
