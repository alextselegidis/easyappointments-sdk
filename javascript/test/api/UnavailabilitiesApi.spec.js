/*
 * Easy!Appointments API
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EasyappointmentsApi);
  }
}(this, function(expect, EasyappointmentsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EasyappointmentsApi.UnavailabilitiesApi();
  });

  describe('(package)', function() {
    describe('UnavailabilitiesApi', function() {
      describe('unavailabilitiesGet', function() {
        it('should call unavailabilitiesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for unavailabilitiesGet call and complete the assertions
          /*
          var opts = {};

          instance.unavailabilitiesGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.UnavailabilityCollection);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unavailabilitiesPost', function() {
        it('should call unavailabilitiesPost successfully', function(done) {
          // TODO: uncomment, update parameter values for unavailabilitiesPost call and complete the assertions
          /*

          instance.unavailabilitiesPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.UnavailabilityRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unavailabilitiesUnavailabilityIdDelete', function() {
        it('should call unavailabilitiesUnavailabilityIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for unavailabilitiesUnavailabilityIdDelete call
          /*

          instance.unavailabilitiesUnavailabilityIdDelete(unavailabilityId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unavailabilitiesUnavailabilityIdGet', function() {
        it('should call unavailabilitiesUnavailabilityIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for unavailabilitiesUnavailabilityIdGet call and complete the assertions
          /*

          instance.unavailabilitiesUnavailabilityIdGet(unavailabilityId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.UnavailabilityRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('unavailabilitiesUnavailabilityIdPut', function() {
        it('should call unavailabilitiesUnavailabilityIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for unavailabilitiesUnavailabilityIdPut call and complete the assertions
          /*

          instance.unavailabilitiesUnavailabilityIdPut(body, unavailabilityId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EasyappointmentsApi.UnavailabilityRecord);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
