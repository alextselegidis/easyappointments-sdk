/* 
 * Easy!Appointments API
 *
 * These are the OpenAPI specs that describe the REST API of Easy!Appointments.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@easyappointments.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AppointmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AppointmentsApiTests
    {
        private AppointmentsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AppointmentsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AppointmentsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AppointmentsApi
            //Assert.IsInstanceOfType(typeof(AppointmentsApi), instance, "instance is a AppointmentsApi");
        }

        /// <summary>
        /// Test AppointmentsAppointmentIdDelete
        /// </summary>
        [Test]
        public void AppointmentsAppointmentIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? appointmentId = null;
            //instance.AppointmentsAppointmentIdDelete(appointmentId);
            
        }
        /// <summary>
        /// Test AppointmentsAppointmentIdGet
        /// </summary>
        [Test]
        public void AppointmentsAppointmentIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? appointmentId = null;
            //var response = instance.AppointmentsAppointmentIdGet(appointmentId);
            //Assert.IsInstanceOf<AppointmentRecord> (response, "response is AppointmentRecord");
        }
        /// <summary>
        /// Test AppointmentsAppointmentIdPut
        /// </summary>
        [Test]
        public void AppointmentsAppointmentIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppointmentPayload body = null;
            //int? appointmentId = null;
            //var response = instance.AppointmentsAppointmentIdPut(body, appointmentId);
            //Assert.IsInstanceOf<AppointmentRecord> (response, "response is AppointmentRecord");
        }
        /// <summary>
        /// Test AppointmentsGet
        /// </summary>
        [Test]
        public void AppointmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? length = null;
            //string sort = null;
            //string q = null;
            //string fields = null;
            //string with = null;
            //string aggregates = null;
            //var response = instance.AppointmentsGet(page, length, sort, q, fields, with, aggregates);
            //Assert.IsInstanceOf<AppointmentCollection> (response, "response is AppointmentCollection");
        }
        /// <summary>
        /// Test AppointmentsPost
        /// </summary>
        [Test]
        public void AppointmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppointmentPayload body = null;
            //var response = instance.AppointmentsPost(body);
            //Assert.IsInstanceOf<AppointmentRecord> (response, "response is AppointmentRecord");
        }
    }

}
